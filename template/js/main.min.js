"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var modals,
  modalTogglers,
  html = document.querySelector("html");
function closeModals(e, o, t) {
  modalTogglers.forEach(function (e) {
    e.classList.remove("active-modal-button");
  }), modals.forEach(function (e) {
    e.classList.remove("modal--opened"), setTimeout(function () {
      "mobileNav" !== e.id && e.classList.remove("!flex"), o && o(), html.classList.remove("overflow-hidden");
    }, null != t ? t : 300);
  });
}
function openModal(e, o, t) {
  html.classList.add("overflow-hidden"), o.classList.add("!flex"), t.classList.add("active-modal-button"), setTimeout(function () {
    o.classList.add("modal--opened");
  }, 1);
}
function toggleModal(e) {
  e.preventDefault();
  var o = document.getElementById(this.dataset.modal),
    t = e.currentTarget,
    n = t.dataset.modalTransition;
  o.classList.contains("modal--opened") ? closeModals(void 0, void 0, n) : null !== document.querySelector(".modal--opened") ? closeModals(void 0, function () {
    return openModal(e, o, t);
  }) : openModal(e, o, t);
}
var setModals = function setModals() {
  modalTogglers = document.querySelectorAll("[data-modal]"), modals = document.querySelectorAll(".modal");
  var e = document.querySelectorAll(".modal > div"),
    o = document.querySelectorAll(".modal__close");
  modalTogglers.forEach(function (e) {
    e.addEventListener("click", toggleModal);
  }), modals.forEach(function (e) {
    e.addEventListener("click", function (e) {
      e.preventDefault(), closeModals();
    });
  }), o.forEach(function (e) {
    e.addEventListener("click", function (e) {
      e.preventDefault(), closeModals();
    });
  }), e.forEach(function (e) {
    e.addEventListener("click", function (e) {
      e.stopPropagation();
    });
  });
};
document.addEventListener("DOMContentLoaded", function () {
  setModals(), document.querySelectorAll(".accardeon").forEach(function (e) {
    var o = e.querySelectorAll(":scope > .accardeon-item");
    o.forEach(function (e) {
      e.querySelector(".accardeon-item__but").addEventListener("click", function () {
        e.classList.contains("opened") ? e.classList.remove("opened") : (o.forEach(function (e) {
          e.classList.remove("opened");
        }), e.classList.add("opened"));
      });
    });
  });
  var e = _toConsumableArray(document.querySelectorAll(".drop-down__open")),
    o = _toConsumableArray(document.querySelectorAll(".drop-down__list"));
  e.forEach(function (e) {
    e.addEventListener("click", function (e) {
      e.preventDefault(), this.closest(".drop-down").classList.toggle("opened");
    });
  }), o.forEach(function (e) {
    e.querySelectorAll(":scope > a").length < 4 && e.closest(".drop-down").classList.add("disbled");
  });
  document.querySelectorAll('[name="PHONE"]').forEach(function (e) {
    IMask(e, {
      mask: "+{7}(000)000-00-00"
    });
  }), Fancybox.bind("[data-fancybox]", {});
});
var documentHeight = function documentHeight() {
  document.documentElement.style.setProperty("--doc-height", window.innerHeight + "px");
};
documentHeight(), window.addEventListener("resize", documentHeight);